Index: app/src/main/res/layout/fragment_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/frameLayout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".LoginFragment\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/spotLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/logoConstraintLayout\"\r\n        tools:layout_editor_absoluteX=\"16dp\">\r\n\r\n        <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n            android:id=\"@+id/logoutBtn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:layout_marginBottom=\"16dp\"\r\n            android:clickable=\"true\"\r\n            android:src=\"@android:drawable/btn_dialog\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/spotView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        </androidx.recyclerview.widget.RecyclerView>\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/spotInfo\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textAlignment=\"center\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            android:text=\"\"/>\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/logoConstraintLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/logoTop\"\r\n            android:layout_width=\"230dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:srcCompat=\"@drawable/car_spotter_logo\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/slogan2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"-20dp\"\r\n            android:fontFamily=\"@font/rubik_medium\"\r\n            android:gravity=\"center_horizontal\"\r\n            android:text=\"The Ultimate Car Companion\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/logoTop\" />\r\n\r\n        <com.google.android.material.divider.MaterialDivider\r\n            android:id=\"@+id/divider\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginHorizontal=\"16dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            app:dividerColor=\"@color/m3_sys_color_dynamic_dark_outline\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/slogan2\"\r\n            tools:layout_editor_absoluteX=\"16dp\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/loginLayout\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/loginfab\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/logoConstraintLayout\">\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/textUsername\"\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginHorizontal=\"16dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:hint=\"Username\"\r\n            app:endIconMode=\"clear_text\"\r\n            app:helperText=\"Required\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/username\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/textPassword\"\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginHorizontal=\"16dp\"\r\n            android:layout_marginVertical=\"8dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:hint=\"Password\"\r\n            app:endIconMode=\"password_toggle\"\r\n            app:helperText=\"Required\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/textUsername\"\r\n            app:layout_constraintVertical_bias=\"0.0\"\r\n            >\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/password\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:inputType=\"textPassword\" />\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n        <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton\r\n            android:id=\"@+id/loginfab\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"bottom|right\"\r\n            android:layout_marginHorizontal=\"32dp\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\"\r\n            android:layout_marginBottom=\"16dp\"\r\n\r\n            android:contentDescription=\"@string/extended_fab_content_desc\"\r\n            android:text=\"@string/action_sign_in\"\r\n            app:iconPadding=\"-20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"1.0\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_login.xml b/app/src/main/res/layout/fragment_login.xml
--- a/app/src/main/res/layout/fragment_login.xml	(revision cdc88efcfc23c8f4efa3ef96e550c7422343049e)
+++ b/app/src/main/res/layout/fragment_login.xml	(date 1684236507451)
@@ -33,7 +33,8 @@
             app:layout_constraintBottom_toBottomOf="parent"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent">
+            app:layout_constraintTop_toTopOf="parent"
+            android:layout_marginTop="8dp">
 
         </androidx.recyclerview.widget.RecyclerView>
 
@@ -49,6 +50,17 @@
             app:layout_constraintTop_toTopOf="parent"
             android:text=""/>
 
+        <com.google.android.material.progressindicator.LinearProgressIndicator
+            android:id="@+id/progressIndicatorOwnSpotView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:trackThickness="7dp"
+            android:indeterminate="true"
+            app:showAnimationBehavior="outward"
+            app:hideAnimationBehavior="inward"
+            app:layout_constraintBottom_toBottomOf="parent"
+            />
+
     </androidx.constraintlayout.widget.ConstraintLayout>
 
     <androidx.constraintlayout.widget.ConstraintLayout
Index: app/src/main/java/com/example/carspotter/LoginFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.carspotter;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.constraintlayout.widget.ConstraintSet;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.carspotter.model.Spot;\r\nimport com.google.android.gms.common.SignInButton;\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\n\r\nimport java.io.UnsupportedEncodingException;\r\nimport java.net.URLEncoder;\r\nimport java.nio.charset.Charset;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalTime;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Random;\r\nimport java.security.MessageDigest;\r\nimport java.util.UUID;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class LoginFragment extends Fragment implements RecyclerViewInterface{\r\n\r\n    /**\r\n     * These are needed for the login process\r\n     */\r\n    private ConstraintLayout loginLayout;\r\n    private String REGISTER_URL = \"https://studev.groept.be/api/a22pt304/RegisterUser\";\r\n    private String CHECK_USER_URL = \"https://studev.groept.be/api/a22pt304/CheckUser\";\r\n    private String LOGIN_URL = \"https://studev.groept.be/api/a22pt304/CheckPass\";\r\n    private String STRING_URL = \"https://studev.groept.be/api/a22pt304/GetRandomString\";\r\n    private String SPOTS_URL = \"https://studev.groept.be/api/a22pt304/GetSpotsFromUser/\";\r\n\r\n    private View view;\r\n    private ExtendedFloatingActionButton loginfab;\r\n    private TextInputEditText username;\r\n    private TextInputEditText password;\r\n    private RecyclerView spotView;\r\n    private String givenUser;\r\n    boolean exists = false;\r\n    private List<Spot> spots = new ArrayList<>();\r\n    private TextView spotInfo;\r\n    SpotLocationFragment spotLocationFragment = new SpotLocationFragment();\r\n\r\n\r\n    /**\r\n     * These are needed to switch to a list of all the user's spots\r\n     */\r\n    private RecyclerView personalSpots;\r\n    private ConstraintLayout spotLayout;\r\n    private FloatingActionButton logoutBtn;\r\n\r\n    public LoginFragment() {\r\n        // Required empty public constructor\r\n    }\r\n    public static LoginFragment newInstance(String param1, String param2) {\r\n        LoginFragment fragment = new LoginFragment();\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        view = inflater.inflate(R.layout.fragment_login, container, false);\r\n        loginfab = (ExtendedFloatingActionButton) view.findViewById(R.id.loginfab);\r\n        username = view.findViewById(R.id.username);\r\n        password = view.findViewById(R.id.password);\r\n\r\n        loginLayout = view.findViewById(R.id.loginLayout);\r\n        spotLayout = view.findViewById(R.id.spotLayout);\r\n        logoutBtn = view.findViewById(R.id.logoutBtn);\r\n        spotInfo = view.findViewById(R.id.spotInfo);\r\n\r\n        if (((MainActivity) (getContext())).getUser() != null) {\r\n            toggleLayout(newLayout.personalSpots);\r\n        }\r\n        else {\r\n            toggleLayout(newLayout.login);\r\n        }\r\n        logoutListener();\r\n        Process();\r\n\r\n\r\n        spotView = view.findViewById( R.id.spotView);\r\n        SpotsAdapter2 adapter = new SpotsAdapter2( spots, this );\r\n        spotView.setAdapter( adapter );\r\n        spotView.setLayoutManager( new LinearLayoutManager( getActivity() ));\r\n\r\n        spots.clear();\r\n        spotView.getAdapter().notifyDataSetChanged();\r\n\r\n        return view;\r\n    }\r\n    private void Process(){\r\n        loginfab.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                /**\r\n                 * Here we simply check if both fields are filled in, if so we proceed to processing the data.\r\n                 */\r\n                //TODO: vermijd speciale characters\r\n\r\n                // Check if username is filled in\r\n                int check = 0;\r\n                String input = username.getText().toString().trim();\r\n                if (input.isEmpty()) {\r\n                    username.setError(\"This field cannot be empty\");\r\n                } else {\r\n                    username.setError(null);\r\n                    check += 1;\r\n                }\r\n\r\n                // Check if username contains special characters\r\n                Pattern specialChars = Pattern.compile (\"[!@#$%&*()_+=|<>?{}\\\\[\\\\]~'\\\"/;`%:-]\");\r\n                Matcher hasSpecialUser = specialChars.matcher(input);\r\n                if (hasSpecialUser.find()) {\r\n                    username.setError(\"The username can't contain any special characters!\");\r\n                }\r\n                else {\r\n                    username.setError(null);\r\n                    check += 1;\r\n                }\r\n\r\n                // Check if password is filled in\r\n                input = password.getText().toString().trim();\r\n                if (input.isEmpty()) {\r\n                    password.setError(\"This field cannot be empty\");\r\n                } else {\r\n                    password.setError(null);\r\n                    check += 1;\r\n                }\r\n                // Check if username contains special characters\r\n                Matcher hasSpecialPass = specialChars.matcher(input);\r\n                if (hasSpecialPass.find()) {\r\n                    password.setError(\"The password can't contain any special characters!\");\r\n                }\r\n                else {\r\n                    password.setError(null);\r\n                    check += 1;\r\n                }\r\n\r\n                if(check == 4){\r\n                    givenUser = String.valueOf(username.getText());\r\n                    processData();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public static boolean Password_Validation(String password)\r\n    {\r\n        if(password.length()>=8)\r\n        {\r\n            Pattern specialChars = Pattern.compile (\"[!@#$%&*()_+=|<>?{}\\\\[\\\\]~-]\");\r\n\r\n            Matcher hasSpecial = specialChars.matcher(password);\r\n\r\n            return hasSpecial.find();\r\n\r\n        }\r\n        else\r\n            return false;\r\n\r\n    }\r\n    private void processData() {\r\n        /**\r\n         * Here we first check if the user already exists. If they do, the password will be checked and they'll log in.\r\n         * If the user doesn't already exist, they'll be promted with a pop-up to confirm the registration.\r\n         */\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());\r\n        JsonArrayRequest queueRequest = new JsonArrayRequest(\r\n                Request.Method.GET,\r\n                CHECK_USER_URL + \"/\" + givenUser,\r\n                null,\r\n                new Response.Listener<JSONArray>() {\r\n                    @Override\r\n                    public void onResponse(JSONArray response) {\r\n                        // Check if database contains the user\r\n                        if (response.length() != 0){\r\n                            login();\r\n                        }\r\n                        else {\r\n                            register();\r\n                        }\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(\r\n                                getActivity(),\r\n                                \"Unable to communicate with the server\",\r\n                                Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n        requestQueue.add(queueRequest);\r\n    }\r\n    private void register() {\r\n        new MaterialAlertDialogBuilder(getContext())\r\n                .setTitle(\"Register\")\r\n                .setMessage(\"Seems like you don't already have an account, do you wish to register? DISCLAIMER: You will not be able to change your username afterwards, chose carefully.\")\r\n                .setNeutralButton(getResources().getString(R.string.no), new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // Respond to neutral button press\r\n                    }\r\n                })\r\n                .setPositiveButton(getResources().getString(R.string.yes), new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // Respond to positive button press\r\n                        RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n                        StringRequest submitRequest = new StringRequest(\r\n                                Request.Method.POST,\r\n                                REGISTER_URL,\r\n                                new Response.Listener<String>() {\r\n                                    @Override\r\n                                    public void onResponse(String response) {\r\n                                        ((MainActivity) (getContext())).setUser(givenUser);\r\n                                        Toast.makeText(\r\n                                                getActivity(),\r\n                                                \"Succesfully registered, welcome \"+givenUser+\"!\",\r\n                                                Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                },\r\n                                new Response.ErrorListener() {\r\n                                    @Override\r\n                                    public void onErrorResponse(VolleyError error) {\r\n                                        Toast.makeText(\r\n                                                getActivity(),\r\n                                                \"Unable to connect to database\" + error,\r\n                                                Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                }\r\n                        ) { //NOTE THIS PART: here we are passing the POST parameters to the webservice\r\n                            @Override\r\n                            protected Map<String, String> getParams() {\r\n                                String newPass = String.valueOf(password.getText());\r\n                                String randomString = generateRandomString();\r\n                                String hashedPass = hash(newPass,randomString);\r\n\r\n                                Map<String, String> params = new HashMap<>();\r\n                                params.put(\"user\", givenUser);\r\n                                params.put(\"pass\", hashedPass);\r\n                                params.put(\"string\", randomString);\r\n                                return params;\r\n                            }\r\n                        };\r\n                        requestQueue.add(submitRequest);\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    static String generateRandomString() {\r\n        // This code is used for generating the randomString\r\n        UUID randomUUID = UUID.randomUUID();\r\n        String randomString = randomUUID.toString().replaceAll(\"_\", \"\");\r\n        randomString = randomUUID.toString().replaceAll(\"-\", \"\");\r\n        return randomString;\r\n    }\r\n    private String hash(String password, String randomString){\r\n        String hashedPass = \"\";\r\n        try {\r\n            MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n            messageDigest.update((password + randomString).getBytes(StandardCharsets.UTF_8));\r\n            byte[] hash = messageDigest.digest();\r\n\r\n            // Convert the byte array to a hexadecimal string\r\n            StringBuilder hexString = new StringBuilder();\r\n            for (byte b : hash) {\r\n                String hex = String.format(\"%02x\", b);\r\n                hexString.append(hex);\r\n            }\r\n            hashedPass = hexString.toString();\r\n        } catch (NoSuchAlgorithmException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return hashedPass;\r\n    }\r\n    private void login(){\r\n        /**\r\n         * Here we create the hashed password from the given textfields and then proceed to checkLogin()\r\n         */\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());\r\n        JsonArrayRequest queueRequest = new JsonArrayRequest(\r\n                Request.Method.GET,\r\n            STRING_URL + \"/\" + givenUser,\r\n                null,\r\n                new Response.Listener<JSONArray>() {\r\n                    @Override\r\n                    public void onResponse(JSONArray response) {\r\n                        // Check if database contains the user\r\n                        try {\r\n                            String randomString = response.getJSONObject(0).getString(\"randomString\");\r\n                            String givenPass = String.valueOf(password.getText());\r\n\r\n                            String hashedPass = hash(givenPass,randomString);\r\n                            checkLogin(hashedPass);\r\n                        } catch (JSONException e) {\r\n                            throw new RuntimeException(e);\r\n                        }\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(\r\n                                getActivity(),\r\n                                \"Unable to communicate with the server\",\r\n                                Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n        requestQueue.add(queueRequest);\r\n    }\r\n\r\n    /**\r\n     * Here we check if the local hashed password matches the one stored in the database.\r\n     * The actual check will be in the SQL query for user safety.\r\n     */\r\n     private void checkLogin(String hashedPass){\r\n         RequestQueue requestQueue = Volley.newRequestQueue(getActivity());\r\n         JsonArrayRequest queueRequest = new JsonArrayRequest(\r\n                 Request.Method.GET,\r\n                 LOGIN_URL + \"/\" + hashedPass + \"/\" +givenUser,\r\n                 null,\r\n                 new Response.Listener<JSONArray>() {\r\n                     @Override\r\n                     public void onResponse(JSONArray response) {\r\n                         // Check if database contains the user\r\n                         try {\r\n                             if (response.getJSONObject(0).getString(\"password_match\").equals(\"1\")){\r\n                                 String loggedUser = String.valueOf(username.getText());\r\n                                 ((MainActivity) (getContext())).setUser(loggedUser);\r\n                                 Toast.makeText(\r\n                                         getActivity(),\r\n                                         \"Succesfully logged in, welcome back \"+loggedUser,\r\n                                         Toast.LENGTH_SHORT).show();\r\n                                 toggleLayout(newLayout.personalSpots);\r\n                             }\r\n                             else {\r\n                                 Toast.makeText(\r\n                                         getActivity(),\r\n                                         \"Password doesn't match! Please try again.\",\r\n                                         Toast.LENGTH_SHORT).show();\r\n                             }\r\n                         } catch (JSONException e) {\r\n                             throw new RuntimeException(e);\r\n                         }\r\n                     }\r\n                 },\r\n                 new Response.ErrorListener() {\r\n                     @Override\r\n                     public void onErrorResponse(VolleyError error) {\r\n                         Toast.makeText(\r\n                                 getActivity(),\r\n                                 \"Unable to communicate with the server\",\r\n                                 Toast.LENGTH_SHORT).show();\r\n                     }\r\n                 });\r\n         requestQueue.add(queueRequest);\r\n     }\r\n\r\n    /**\r\n     * Once logged in we switch layouts\r\n     */\r\n    public enum newLayout {\r\n        login,\r\n        personalSpots;\r\n    }\r\n    private void toggleLayout(newLayout layout){\r\n        if(layout == newLayout.login){\r\n            loginLayout.setVisibility(view.VISIBLE);\r\n            loginfab.setVisibility(view.VISIBLE);\r\n\r\n            spotLayout.setVisibility(view.INVISIBLE);\r\n        }\r\n        else{\r\n            loginLayout.setVisibility(view.INVISIBLE);\r\n            loginfab.setVisibility(view.INVISIBLE);\r\n\r\n            spotLayout.setVisibility(view.VISIBLE);\r\n            getSpotsFromUser();\r\n        }\r\n\r\n    }\r\n\r\n    private void getSpotsFromUser() {\r\n        String user = ((MainActivity) (getContext())).getUser();\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());\r\n        JsonArrayRequest queueRequest = new JsonArrayRequest(\r\n                Request.Method.GET,\r\n                SPOTS_URL + user,\r\n                null,\r\n                new Response.Listener<JSONArray>() {\r\n                    @Override\r\n                    public void onResponse(JSONArray response) {\r\n                        processJSONResponse(response);\r\n                        if (spots.size() != 0){\r\n                            spotInfo.setText(\"\");\r\n                        }\r\n                        else{\r\n                            spotInfo.setText(\"You haven't add a spot yet!\");\r\n                            }\r\n                        spotView.getAdapter().notifyDataSetChanged();\r\n                        //circularProgressIndicatorCarView.setVisibility(View.INVISIBLE);\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(\r\n                                getActivity(),\r\n                                \"Unable to communicate with the server\",\r\n                                Toast.LENGTH_LONG).show();\r\n                    }\r\n                });\r\n        requestQueue.add(queueRequest);\r\n    }\r\n\r\n    private void logoutListener() {\r\n        logoutBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                ((MainActivity) (getContext())).logoutUser();\r\n                toggleLayout(newLayout.login);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void processJSONResponse(JSONArray response) {\r\n        //Add spots from database into local list for recyclerview\r\n        spots.clear();\r\n        for (int i = 0; i < response.length(); i++) {\r\n            try {\r\n                Spot spot = new Spot(response.getJSONObject(i));\r\n                spots.add(spot);\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        Collections.sort(spots, (o1, o2) -> o1.getDate().compareTo(o2.getDate()));\r\n        Collections.reverse(spots);\r\n    }\r\n\r\n    @Override\r\n    public void onItemClick(int position, String type) {\r\n        //Send information from the selected spot to the new fragment (map)\r\n        Bundle bundle = new Bundle();\r\n        spotLocationFragment.setArguments(bundle);\r\n        bundle.putParcelable(\"Spot\", spots.get(position));\r\n        FragmentTransaction transaction = getParentFragmentManager().beginTransaction();\r\n        transaction.replace(R.id.flFragment, spotLocationFragment ); // give your fragment container id in first parameter\r\n        transaction.addToBackStack(null);  // if written, this transaction will be added to backstack\r\n        transaction.commit();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/carspotter/LoginFragment.java b/app/src/main/java/com/example/carspotter/LoginFragment.java
--- a/app/src/main/java/com/example/carspotter/LoginFragment.java	(revision cdc88efcfc23c8f4efa3ef96e550c7422343049e)
+++ b/app/src/main/java/com/example/carspotter/LoginFragment.java	(date 1684236507438)
@@ -29,6 +29,7 @@
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
+import com.google.android.material.progressindicator.LinearProgressIndicator;
 import com.google.android.material.textfield.TextInputEditText;
 import com.google.android.material.textfield.TextInputLayout;
 
@@ -74,6 +75,7 @@
     boolean exists = false;
     private List<Spot> spots = new ArrayList<>();
     private TextView spotInfo;
+    private LinearProgressIndicator progressIndicatorOwnSpotView;
     SpotLocationFragment spotLocationFragment = new SpotLocationFragment();
 
 
@@ -129,6 +131,8 @@
 
         spots.clear();
         spotView.getAdapter().notifyDataSetChanged();
+        progressIndicatorOwnSpotView = view.findViewById(R.id.progressIndicatorOwnSpotView);
+        progressIndicatorOwnSpotView.hide();
 
         return view;
     }
@@ -419,6 +423,7 @@
             loginfab.setVisibility(view.INVISIBLE);
 
             spotLayout.setVisibility(view.VISIBLE);
+            progressIndicatorOwnSpotView.show();
             getSpotsFromUser();
         }
 
@@ -442,7 +447,7 @@
                             spotInfo.setText("You haven't add a spot yet!");
                             }
                         spotView.getAdapter().notifyDataSetChanged();
-                        //circularProgressIndicatorCarView.setVisibility(View.INVISIBLE);
+                        progressIndicatorOwnSpotView.hide();
                     }
                 },
                 new Response.ErrorListener() {
@@ -452,6 +457,7 @@
                                 getActivity(),
                                 "Unable to communicate with the server",
                                 Toast.LENGTH_LONG).show();
+                        progressIndicatorOwnSpotView.hide();
                     }
                 });
         requestQueue.add(queueRequest);
